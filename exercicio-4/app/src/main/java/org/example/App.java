/*
 * This source file was generated by the Gradle 'init' task
 * Desenvolvido por Igor da Silva
 */
package org.example;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

// Como ler um arquivo .txt
// https://www.youtube.com/watch?v=D21A6KFvpkM

public class App {
    
    static int formato_correto(String caminho){

        // Se tiver 10 linhas e existir arq.lenght() - linhas - 1 caracteres, o formato está correto,
        // pois no meu gerador de tabuleiro cada casa está no formato "caractere+espaço", Ex: "P "
        // Logo, a quantidade de caracteres gerados pelo meu programa é 209:
        // Cada casa ocupa dois caracteres;
        // Da linha 1 até a linha 10 há 9 quebras de linhas

        try {

            File arq = new File(caminho);
            Scanner leitura = new Scanner(arq);

            int linhas = 0;
            while(leitura.hasNextLine()){
                leitura.nextLine();
                linhas++;
            }

            if(arq.length() - linhas - 1 == 200)
            return 1;

        } 

        catch (FileNotFoundException e) {
            System.out.println("Arquivo não encontrado: " + caminho);
        }

        return 0;  
    }

    static String[][] retorna_tab(String caminho){

        String[][] tab = new String[10][10];

        try {

            File arq = new File(caminho);
            Scanner leitura = new Scanner(arq);
            String linha;
            int l = 0;

            while(leitura.hasNextLine()){
                
                linha = leitura.nextLine();
                String[] aux = linha.split(" ");

                for(int c = 0; c < 10; c++){

                    // Para manter o padrão de string das posições
                    tab[l][c] = aux[c] + " ";

                }

                l++;
            }
            leitura.close();
        } 

        catch (FileNotFoundException e) {
            System.out.println("Arquivo não encontrado: " + caminho);
        }

        return tab;
    }

    static int simbologia_correta(String caminho){

        // Aqui vou verificar se encontro alguma posição
        // com string diferente de "., P, E, C, N ou S"
            // Se tiver um símbolo incorreto, retorna 0
            // Caso contrário, retorna 1

        String[][] tab = retorna_tab(caminho);
        for(int i = 0; i < 10; i++){

            for(int j = 0; j < 10; j++){

                if(! tab[i][j].equals(". ") || ! tab[i][j].equals("P ") || ! tab[i][j].equals("C ") || 
                   ! tab[i][j].equals("C ") || ! tab[i][j].equals("N. ") || ! tab[i][j].equals("S ") )
                    return 0;

            }

        }

        return 1;

    }

    public static void main(String[] args) {
        
        String caminho = "/home/igor/Área de Trabalho/Linguagem_Java/lista-1-igor1023/exercicio-4/tabuleiro.txt";
        
        if(formato_correto(caminho) == 1 && simbologia_correta(caminho) == 1)
            System.out.printf("Tabuleiro válido\n");
        else System.out.printf("Tabuleiro inválido\n");

    }
}
